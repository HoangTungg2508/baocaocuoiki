{"ast":null,"code":"var _jsxFileName = \"F:\\\\loc\\\\dev\\\\reactjs\\\\ecommerce_mern\\\\client\\\\src\\\\components\\\\mainpages\\\\success\\\\Success.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Success = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    // Fetch orders from your server\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('/api/orders');\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n    fetchOrders();\n  }, []); // Run this effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Order ID: \", order.id, \", Amount: \", order.amount, \", Status: \", order.status]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Success, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = Success;\nexport default Success;\nvar _c;\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Success","_s","orders","setOrders","fetchOrders","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","id","amount","status","_c","$RefreshReg$"],"sources":["F:/loc/dev/reactjs/ecommerce_mern/client/src/components/mainpages/success/Success.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Success = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch orders from your server\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const response = await axios.get('/api/orders');\r\n        setOrders(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []); // Run this effect only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h2>Orders</h2>\r\n      <ul>\r\n        {orders.map((order) => (\r\n          <li key={order.id}>\r\n            Order ID: {order.id}, Amount: {order.amount}, Status: {order.status}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,aAAa,CAAC;QAC/CH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACff,OAAA;MAAAW,QAAA,EACGR,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAAW,QAAA,GAAmB,YACP,EAACM,KAAK,CAACC,EAAE,EAAC,YAAU,EAACD,KAAK,CAACE,MAAM,EAAC,YAAU,EAACF,KAAK,CAACG,MAAM;MAAA,GAD5DH,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA7BID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}